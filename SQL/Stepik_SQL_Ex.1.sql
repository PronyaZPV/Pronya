/*
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
*/

-- При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.
SELECT author, title, ROUND(IF(author="Булгаков М.А.", price*1.1, IF(author="Есенин С.А.", price*1.05, price*1)),2) AS new_price FROM book;


-- Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .
SELECT title, author FROM book WHERE (price BETWEEN 540.50 AND 800) AND amount IN(2,3,5,7);


-- Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. Информацию отсортировать по названию книги в алфавитном порядке.
SELECT title,author FROM book WHERE (title LIKE "_% %_") AND (author LIKE "%С.%") ORDER BY title


/* Осталось 5 дней до конца месяца и молодому магазину необходимо подвести итоги.
В конце прошлого месяца в пустой склад было закуплено по 30 экземпляров книг каждого произведения.
1. Отдельным полем показать количество экземпляров, проданных за текущий месяц, по каждому произведению.
Назвать поле: Продано
2. Отдельным полем выставить скидки на книги, чтобы постараться продать до конца месяца плохо продаваемые:
    2.1. Если было продано более 70% книг (включительно), то скидку НЕ делаем.
    2.2. Если было продано от 55% до 69% книг (включительно), то скидку делаем 25%.
    2.3. Если было продано менее 54% книг (включительно), то скидку делаем 55%.
Назвать поле: Новая_цена
3. Отсортировать по полю Новая_цена по убыванию.
*/
SELECT title AS Название, author AS Автор, price AS Цена, amount AS Осталось,
	(30 - amount) AS Продано,
	ROUND(IF((30 - amount)/30 <= 0.54, price*0.45, IF((30 - amount)/30>=0.7, price*1, price*0.75)),2) AS Новая_цена
FROM book ORDER BY Новая_цена DESC

/*
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
*/

-- Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
SELECT author AS Автор, COUNT(title) AS Различных_книг, SUM(amount) AS Количество_экземпляров
FROM book
GROUP BY author;


-- Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой.
SELECT author, SUM(price*amount) AS Стоимость,
    ROUND(SUM(price*amount) * 0.18 / 1.18, 2) AS НДС,
    ROUND(SUM(price*amount) / 1.18, 2) AS Стоимость_без_НДС
FROM book GROUP BY author;


-- Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
SELECT MIN(price) AS Минимальная_цена, 
    MAX(price) AS Максимальная_цена, 
    ROUND(AVG(DISTINCT price),2) AS Средняя_цена
FROM book;


-- Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
SELECT ROUND(AVG(price),2) AS Средняя_цена, 
    SUM(price*amount) AS Стоимость 
FROM book WHERE amount BETWEEN 5 AND 14;


-- Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
SELECT author,
    SUM(amount*price) AS Стоимость
FROM book
WHERE title NOT IN("Идиот","Белая гвардия")
GROUP BY author
HAVING SUM(amount*price) > 5000
ORDER BY Стоимость DESC


-- Узнать сколько авторов, у которых есть не менее 2-х книг со стоимостью более 500 и количеством более 1 шт на складе. Вывести автора, количество различных произведений автора, минимальную цену и количество книг на складе.
SELECT author, 
	COUNT(title) AS Количество_произведений,
	MIN(price) AS Мин_цена,
	SUM(amount) AS Количество
FROM book
WHERE amount > 1 AND price > 500
GROUP BY author
HAVING COUNT(title) > 1


-- ВЛОЖЕННЫЕ ЗАПРОСЫ

-- Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
SELECT author, title, price
FROM book
WHERE price <= (
    SELECT AVG(price) FROM book
    )
ORDER BY price DESC;


-- Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
SELECT author, title, price
FROM book
WHERE price - (SELECT MIN(price) FROM book) <= 150
ORDER BY price


-- Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
SELECT author, title, amount FROM book
WHERE amount IN (SELECT amount from book GROUP BY amount HAVING COUNT(amount)=1)


-- Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.
SELECT author, title, price FROM book
WHERE price < ANY(SELECT MIN(price) FROM book GROUP BY author)


-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. 
--Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.
SELECT title, author, amount,
    (SELECT MAX(amount) FROM book)-amount AS Заказ
FROM book
WHERE amount < (SELECT MAX(amount) FROM book)


-- Посмотреть, при продаже всех книг, какая книга принесет больше всего выручки, в процентах. Вывести процент выручки в результат и отсортировать по нему по убыванию.
SELECT author, title, price, amount,
    ROUND(price*amount*100/(SELECT SUM(price*amount) FROM book),2) AS income_percent
FROM book ORDER BY income_percent DESC


-- РЕДАКТИРОВАНИЕ ТАБЛИЦ
-- Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount FROM supply
WHERE author NOT IN (SELECT author FROM book);
/*
+---------+-----------------------+------------------+--------+--------+-----+
| book_id | title                 | author           | price  | amount | buy |
+---------+-----------------------+------------------+--------+--------+-----+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      | 0   |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      | 3   |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     | 8   |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      | 0   |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     | 18  |
+---------+-----------------------+------------------+--------+--------+-----+
*/
-- В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. А цену тех книг, которые покупатель не заказывал, снизить на 10%.
UPDATE book SET 
	buy = IF(buy>amount, amount, buy), 
	price = IF(buy=0, price*0.9, price);
/*
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+

+-----------+----------------+------------------+--------+--------+
| supply_id | title          | author           | price  | amount |
+-----------+----------------+------------------+--------+--------+
| 1         | Лирика         | Пастернак Б.Л.   | 518.99 | 2      |
| 2         | Черный человек | Есенин С.А.      | 570.20 | 6      |
| 3         | Белая гвардия  | Булгаков М.А.    | 540.50 | 7      |
| 4         | Идиот          | Достоевский Ф.М. | 360.80 | 3      |
+-----------+----------------+------------------+--------+--------+
*/
-- Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
DELETE FROM supply 
WHERE author IN (SELECT author FROM book GROUP BY author HAVING SUM(amount) > 10);

-- Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше среднего количества экземпляров книг в таблице book. 
-- В таблицу включить столбец   amount, в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
CREATE TABLE ordering AS
SELECT author, title, (SELECT ROUND(AVG(amount)) FROM book) AS amount FROM book
WHERE amount < (SELECT ROUND(AVG(amount)) FROM book);
/*
+---------+---------------+-----------------+----------+------------+------------+
| trip_id | name          | city            | per_diem | date_first | date_last  |
+---------+---------------+-----------------+----------+------------+------------+
| 1       | Баранов П.Е.  | Москва          | 700.00   | 2020-01-12 | 2020-01-17 |
| 2       | Абрамова К.А. | Владивосток     | 450.00   | 2020-01-14 | 2020-01-27 |
| 3       | Семенов И.В.  | Москва          | 700.00   | 2020-01-23 | 2020-01-31 |
| 4       | Ильиных Г.Р.  | Владивосток     | 450.00   | 2020-01-12 | 2020-02-02 |
| 5       | Колесов С.П.  | Москва          | 700.00   | 2020-02-01 | 2020-02-06 |
| 6       | Баранов П.Е.  | Москва          | 700.00   | 2020-02-14 | 2020-02-22 |
                          ...
| 19      | Абрамова К.А. | Владивосток     | 450.00   | 2020-07-02 | 2020-07-13 |
| 20      | Баранов П.Е.  | Воронеж         | 450.00   | 2020-07-19 | 2020-07-25 |
+---------+---------------+-----------------+----------+------------+------------+
*/
-- Вывести название месяца и количество командировок для каждого месяца. Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. Название столбцов – Месяц и Количество.
SELECT MONTHNAME(date_first) AS Месяц, COUNT(date_first) AS Количество 
FROM trip
GROUP BY MONTHNAME(date_first)
ORDER BY Количество DESC, Месяц

-- Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. Значение суточных для каждой командировки занесено в столбец per_diem. 
-- Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. Последний столбец назвать Сумма. Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.
SELECT name, city, date_first, 
    DATEDIFF(date_last+1, date_first) * per_diem AS Сумма
FROM trip
WHERE MONTH(date_first) IN(2,3) AND YEAR(date_first) = 2020
ORDER BY name, Сумма DESC

-- Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде. Последний столбец назвать Сумма.
SELECT name, SUM(DATEDIFF(date_last+1, date_first) * per_diem) AS Сумма
FROM trip GROUP BY name
HAVING COUNT(*) > 3
ORDER BY Сумма DESC

/*
+---------------+--------+------------------------------+----------+----------------+--------------+
| name          | number | violation                    | sum_fine | date_violation | date_payment |
|               | _plate |                              |          |                |              |
+---------------+--------+------------------------------+----------+----------------+--------------+
| Баранов П.Е.  | Р523ВТ | Превышение скорости(от 40... | 500.00   | 2020-01-12     | 2020-01-17   |
| Абрамова К.А. | О111АВ | Проезд на запрещающий сигнал | 1000.00  | 2020-01-14     | 2020-02-27   |
| Яковлев Г.Р.  | Т330ТТ | Превышение скорости(от 20... | 500.00   | 2020-01-23     | 2020-02-23   |
| Яковлев Г.Р.  | М701АА | Превышение скорости(от 20... | 500.00   | 2020-01-12     | NULL         |
| Колесов С.П.  | К892АХ | Превышение скорости(от 20... | 500.00   | 2020-02-01     | NULL         |
| Баранов П.Е.  | Р523ВТ | Превышение скорости(от 40... | 1000.00  | 2020-02-14     | NULL         |
| Абрамова К.А. | О111АВ | Проезд на запрещающий сигн...| 1000.00  | 2020-02-23     | NULL         |
| Яковлев Г.Р.  | Т330ТТ | Проезд на запрещающий сигн...| 1000.00  | 2020-03-03     | NULL         |
+---------------+--------+------------------------------+----------+----------------+--------------+
*/
-- Вывести фамилию, номер машины и нарушение только для тех водителей, которые на одной машине нарушили одно и то же правило   два и более раз. При этом учитывать все нарушения, независимо от того оплачены они или нет. Информацию отсортировать в алфавитном порядке, сначала по фамилии водителя, потом по номеру машины и, наконец, по нарушению.
SELECT name, number_plate, violation FROM fine
GROUP BY name, number_plate, violation
HAVING COUNT(*)>1
ORDER BY name, number_plate, violation

-- В таблице fine увеличить в два раза сумму неоплаченных штрафов для отобранных на предыдущем шаге записей. 
-- 3 решения
CREATE TABLE query_in AS 
        SELECT name, number_plate, violation FROM fine
        GROUP BY name, number_plate, violation
        HAVING COUNT(*)>1;
UPDATE fine f, query_in qi
SET f.sum_fine = f.sum_fine * 2
WHERE (f.name, f.number_plate, f.violation) = (qi.name, qi.number_plate, qi.violation) AND f.date_payment IS NULL;
SELECT * FROM fine
--
UPDATE fine t, fine f SET t.sum_fine  = 2 * t.sum_fine 
WHERE f.name=t.name
   AND f.date_violation < t.date_violation 
   AND t.violation = f.violation
   AND t.number_plate = f.number_plate 
   AND t.date_payment IS Null;
--
UPDATE  fine f, (SELECT name, number_plate, violation FROM fine
                GROUP BY name, number_plate, violation
                HAVING COUNT(*)>1) qi
SET sum_fine = sum_fine * 2
WHERE (f.name, f.number_plate, f.violation) = (qi.name, qi.number_plate, qi.violation) AND f.date_payment IS NULL

-- Водители оплачивают свои штрафы. В таблице payment занесены даты их оплаты (payment_id | name | number_plate | violation | date_violation | date_payment)
-- Необходимо:
-- 	в таблицу fine занести дату оплаты соответствующего штрафа из таблицы payment; 
-- 	уменьшить начисленный штраф в таблице fine в два раза  (только для тех штрафов, информация о которых занесена в таблицу payment) , если оплата произведена не позднее 20 дней со дня нарушения.
UPDATE fine f, payment p 
    SET f.date_payment = p.date_payment,
        f.sum_fine = IF(DATEDIFF(p.date_payment,p.date_violation)<21, f.sum_fine * 0.5, f.sum_fine)
WHERE (f.name, f.number_plate, f.violation, f.date_violation) = (p.name, p.number_plate, p.violation, p.date_violation) AND f.date_payment IS NULL;

