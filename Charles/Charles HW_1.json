{
	"info": {
		"_postman_id": "8f97b9d4-082f-41d1-8fa1-a0ba300d33fd",
		"name": "HomeWork_4_Charles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19679521"
	},
	"item": [
		{
			"name": "Ex_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/get_method?name=Evgeny&age=35",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "35"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ex_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Evgeny",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_3",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ex_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=Evgeny&age=35&weight=90",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "weight",
							"value": "90"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ex_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Evgeny&age=35&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ex_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Evgeny&age=35&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ex_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// задание 1: проверить присутствие всех параметров в респонсе\r",
							"const resp = pm.response.json()\r",
							"const reqSalary = +pm.request.url.query.get(\"salary\")\r",
							"let req = request.data\r",
							"\r",
							"let arr = []\r",
							"for (const key in resp){  // формируем массив из ключей JSON, чтобы потом пройти по его елементам и сравнить\r",
							"    arr.push(key)   // добавляем каждый элемент в массив по очереди\r",
							"}\r",
							"\r",
							"arr.forEach(item => {\r",
							"    pm.test(`Response have a ${item}`), function() {\r",
							"        pm.expect(resp).to.have.property(item)\r",
							"    }\r",
							"})\r",
							"\r",
							"// задание 2: проверяем корректность формул для расчета salary в ответе с использованием массива данных\r",
							"const count = ['', 3.3, 2.7, 3.8, 2, 1]     // массив с множителями для расчета salary. Пустота, чтобы обойти person\r",
							"\r",
							"count.forEach((item, i) => {\r",
							"    if (arr[i] != \"person\")     // чтобы не тестить person\r",
							"    pm.test(`${resp[arr[i]]} == ${+req.salary} * ${item}`, function() {\r",
							"        pm.expect(resp[arr[i]]).to.eql(+req.salary * item)\r",
							"    })\r",
							"})\r",
							"\r",
							"// то же самое, но красивее и проще\r",
							"arr.forEach((item, i) =>{\r",
							"    if (arr[i] != \"person\")\r",
							"    pm.test(`${item} = ${req.salary * count[i]}`, function(){\r",
							"        pm.expect(resp[item]).to.eql(req.salary * count[i])\r",
							"    })\r",
							"})\r",
							"\r",
							"// сразу два теста в одном - наличие ключей и корректность формул рассчета salary\r",
							"\r",
							"const counter = {           // создаём массиы с проверочными данными\r",
							"    \"person\": \"\",\r",
							"    \"qa_salary_after_1.5_year\": 3.3,\r",
							"    \"qa_salary_after_12_months\": 2.7,\r",
							"    \"qa_salary_after_3.5_years\": 3.8,\r",
							"    \"qa_salary_after_6_months\": 2,\r",
							"    \"start_qa_salary\": 1\r",
							"}\r",
							"\r",
							"for (const key in counter) {        \r",
							"    pm.test(`Response have ${key}`, function(){     // проверем наличие элементов\r",
							"        pm.expect(resp).to.have.property(key)   // property-ключ в JSON\r",
							"    })\r",
							"    if (key != \"person\") {      // обходим person\r",
							"        pm.test(`${key} == ${req.salary} * ${counter[key]}`, function() {   // проверяем корректность формул\r",
							"            pm.expect(resp[key]).to.eql(req.salary * counter[key])\r",
							"        })\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Evgeny",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}